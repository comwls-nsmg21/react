{"version":3,"sources":["views/Common/Chart/BarChart.js","views/Common/Chart/PieChart.js","views/Dashboard/Dashboard.js"],"names":["BarChart","_this$props$item","this","props","item","config","chart","type","title","xAxis","categories","keys","yAxis","allowDecimals","min","series","data","values","colorByPoint","legend","enabled","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","react_highcharts__WEBPACK_IMPORTED_MODULE_6___default","Component","defaultProps","id","PieChart","styledMode","allowPointSelect","showInLegend","react_default","ReactHighcharts_default","Dashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","statsAmount","statsCat","statsEmpl","statsTop","statsLocation","getStats","axios","all","get","api","then","spread","resAmount","resCat","resEmpl","resLocation","setState","catch","err","console","log","getStatsTop","res","finally","coms.indexStatsAmount","coms.indexStatsCat","coms.indexStatsEmpl","coms.indexStatsTop","banks.indexStatsLocation","nextProps","nextState","nextContext","_this$state","isNotEmpty","length","map","val","idx","label","count","charts","className","category","sido","Chart_PieChart","reverse","key","total","content"],"mappings":"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","file":"static/js/20.9e11fb76.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactHighcharts from 'react-highcharts';\r\n\r\nclass BarChart extends Component {\r\n    static defaultProps = {\r\n        id: 0,\r\n        item: {\r\n            keys: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            values: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 295.6, 454.4],\r\n        },\r\n    };\r\n    render() {\r\n        const { keys, values } = this.props.item;\r\n\r\n        const config = {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: false,\r\n            xAxis: {\r\n                categories: keys\r\n            },\r\n            yAxis: {\r\n                allowDecimals: false,\r\n                min: 0,\r\n                title: false\r\n            },\r\n            series: [{\r\n                data: values\r\n            }],\r\n            colorByPoint: true,\r\n            legend: {\r\n                enabled: false\r\n            },\r\n        };\r\n        return (\r\n            <>\r\n                <ReactHighcharts config = {config}></ReactHighcharts>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BarChart;","import React, { Component } from 'react';\r\nimport ReactHighcharts from 'react-highcharts';\r\n\r\nclass PieChart extends Component {\r\n    static defaultProps = {\r\n        id: 0,\r\n        item: {\r\n            keys: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            values: [\r\n                ['Apples', 29.9, false],\r\n                ['Pears', 71.5, false],\r\n                ['Oranges', 106.4, false],\r\n                ['Plums', 129.2, false],\r\n                ['Bananas', 144.0, false],\r\n                ['Peaches', 176.0, false],\r\n                ['Prunes', 135.6, true, true],\r\n                ['Avocados', 148.5, false]\r\n            ]\r\n        },\r\n    };\r\n    render() {\r\n        const { values } = this.props.item;\r\n        \r\n        const config = {\r\n            chart: {\r\n                styledMode: true\r\n            },\r\n            title: false,\r\n            series: [{\r\n                type: 'pie',\r\n                allowPointSelect: true,\r\n                keys: ['name', 'y', 'selected', 'sliced'],\r\n                data: values,\r\n                showInLegend: true\r\n            }]\r\n        };\r\n        return (\r\n            <>\r\n                <ReactHighcharts config = {config}></ReactHighcharts>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PieChart;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport BarChart from '../Common/Chart/BarChart'\nimport PieChart from '../Common/Chart/PieChart';\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.api = {\n            'coms.indexStatsAmount': 'http://pinfin-dev.koreasouth.cloudapp.azure.com/api/companies/amount/stats',\n            'coms.indexStatsCat': 'http://pinfin-dev.koreasouth.cloudapp.azure.com/api/companies/category/stats',\n            'coms.indexStatsEmpl': 'http://pinfin-dev.koreasouth.cloudapp.azure.com/api/companies/employee/stats',\n            'coms.indexStatsTop': 'http://pinfin-dev.koreasouth.cloudapp.azure.com/api/companies/top/stats',\n            'banks.indexStatsLocation': 'http://pinfin-dev.koreasouth.cloudapp.azure.com/api/banks/location/lives'\n        };\n    }\n\n    state = {\n        statsAmount: [],\n        statsCat: {},\n        statsEmpl: [],\n        statsTop: {},\n        statsLocation: {},\n    };\n\n    componentDidMount() {\n        this.getStatsTop();\n        this.getStats();\n    };\n\n    getStats = () => {\n        const getAmount = () => axios.get(this.api[\"coms.indexStatsAmount\"]);\n        const getCat = () => axios.get(this.api[\"coms.indexStatsCat\"]);\n        const getEmpl = () => axios.get(this.api[\"coms.indexStatsEmpl\"]);\n        const getLocation = () => axios.get(this.api[\"banks.indexStatsLocation\"]);\n        axios.all([getAmount(), getCat(), getEmpl(), getLocation()]).then(axios.spread((resAmount, resCat, resEmpl, resLocation) => { //console.log(resEmpl.data.data);\n            this.setState({\n                statsAmount: resAmount.data.data,\n                statsCat: resCat.data.data,\n                statsEmpl: resEmpl.data.data,\n                statsLocation: resLocation.data.data\n            });\n        })).catch(err => {\n            console.log(err);\n        });\n    };\n\n    getStatsTop = () => {\n        axios.get(this.api[\"coms.indexStatsTop\"], {}).then(res => { //console.log(res.data.data);\n            this.setState({statsTop: res.data.data});\n        }).catch(err => {\n            console.log(err)\n        }).finally(() => { /* console.log(this.state) */\n        });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextState !== this.state;\n    }\n\n    render() {\n\n        const {statsAmount, statsCat, statsEmpl, statsTop, statsLocation} = this.state;\n        const isNotEmpty = (((statsAmount.length > 0) && (Object.keys(statsCat).length > 0) && (statsEmpl.length > 0) && (Object.keys(statsTop).length > 0)) && (Object.keys(statsLocation).length > 0));\n        console.log(statsEmpl.map((val, idx) => ([val.label, val.count, (idx===0 ? true : false), (idx===0 ? true : null)])))\n        const charts = (isNotEmpty) && (\n            <div className=\"animated fadeIn\">\n                <div className=\"row\">\n\n                    <div className=\"col-sm-6 col-md-4\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                Top 100 기업 업종별 사업장 비율\n                            </div>\n                            <div className=\"card-body\">\n                                <BarChart item={{\n                                    keys: Object.keys(statsTop.category),\n                                    values: Object.values(statsTop.category),\n                                }} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6 col-md-4\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                Top 100 사업장 위치\n                            </div>\n                            <div className=\"card-body\">\n                                <BarChart item={{\n                                    keys: Object.keys(statsTop.sido),\n                                    values: Object.values(statsTop.sido),\n                                }} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6 col-md-4\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                            국민연금 가입자수 기준 사업장 수\n                            </div>\n                            <div className=\"card-body\">\n                                <PieChart item={{\n                                    values: statsEmpl.map((val, idx) => ([val.label, val.count, (idx===0 ? true : false), (idx===0 ? true : null)]))\n                                }} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6 col-md-4\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                고지금액 기준 사업장 수\n                            </div>\n                            <div className=\"card-body\">\n                                <PieChart item={{\n                                    values: statsAmount.map((val, idx) => ([val.label, val.count, (idx===0 ? true : false), (idx===0 ? true : null)]))\n                                }} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6 col-md-4\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                업종 기준 사업장\n                            </div>\n                            <div className=\"card-body\">\n                                <BarChart item={{\n                                    keys: Object.keys(statsCat).reverse(),\n                                    values: Object.values(statsCat).reverse(),\n                                }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6 col-md-4\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                위치기반 일별 라이브\n                            </div>\n                            <div className=\"card-body\">\n                                <BarChart item={{\n                                    keys: Object.keys(statsLocation.label).map(key => statsLocation.label[key]),\n                                    values: Object.values(statsLocation.total)\n                                }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n\n        const content = (\n            <>\n                {charts}\n            </>\n\n        );\n\n        return (<> {content} </>);\n    }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}