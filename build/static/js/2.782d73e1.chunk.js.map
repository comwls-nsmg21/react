{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/chart.js/dist/Chart.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/moment/moment.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","isArray","Array","baseIsNative","getValue","object","key","value","undefined","process","d","__webpack_exports__","Pie","Line","Bar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_CLIENT_ID","ChartComponent","_React$Component","_temp","_this","this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","values","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","Doughnut","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","_defineProperty","defineProperty","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","clear","entry","get","has","eq","array","nativeCreate","getNative","isKeyable","__data__","isSymbol","INFINITY","result","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","webpackPolyfill","deprecate","paths","children","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep"],"mappings":"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","file":"static/js/2.782d73e1.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;"],"sourceRoot":""}