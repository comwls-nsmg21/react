{"version":3,"sources":["polyfill.js","App.js","serviceWorker.js","index.js"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","loading","react_default","a","createElement","className","DefaultLayout","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","Login","Register","Page404","Page500","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","token","url","location","href","result","substr","indexOf","split","reduce","item","parts","setState","access_token","localStorage","setItem","login","getItem","BrowserRouter","Switch","Route","exact","path","name","component","Redirect","to","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f318b35b.chunk.js","sourcesContent":["/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\nimport 'core-js/es6/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es6/set'\nimport 'core-js/es7/object'\nimport 'core-js/es6/promise'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport Loadable from 'react-loadable';\nimport './App.scss';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\"><div className=\"sk-spinner sk-spinner-pulse\"></div></div>;\n\n// Containers\nconst DefaultLayout = Loadable({\n  loader: () => import('./containers/DefaultLayout'),\n  loading\n});\n// Pages\nconst Login = Loadable({\n  loader: () => import('./views/Pages/Login'),\n  loading\n});\nconst Register = Loadable({\n  loader: () => import('./views/Pages/Register'),\n  loading\n});\n\nconst Page404 = Loadable({\n  loader: () => import('./views/Pages/Page404'),\n  loading\n});\n\nconst Page500 = Loadable({\n  loader: () => import('./views/Pages/Page500'),\n  loading\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        token: '',\n    };\n  }\n  componentWillMount() {\n    const url = window.location.href;\n    const hash = url.substr(url.indexOf('#') + 1);\n    const result = hash.split('&').reduce(function (result, item) {\n        const parts = item.split('=');\n        result[parts[0]] = parts[1];\n        return result;\n    }, {});\n    this.setState({\n        token: result.access_token\n    })\n  }\n  render() {\n    let token = this.state.token;\n    if (token !== undefined) {\n        localStorage.setItem('token', token)\n    }\n    let login = localStorage.getItem('token');\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/register\" name=\"Register Page\" component={Register}/>\n          <Route exact path=\"/404\" name=\"Page 404\" component={Page404}/>\n          <Route exact path=\"/500\" name=\"Page 500\" component={Page500}/>\n          {!login ?\n              <Route exact path=\"/login\" name=\"Login Page\" component={Login}/>\n              :\n              <Route path=\"/\" name=\"Home\" component={DefaultLayout}/>\n          }\n          {!login && <Redirect to=\"/login\"/>}\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}